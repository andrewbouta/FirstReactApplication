[{"X:\\Coding\\React\\confusion\\src\\index.js":"1","X:\\Coding\\React\\confusion\\src\\App.js":"2","X:\\Coding\\React\\confusion\\src\\reportWebVitals.js":"3","X:\\Coding\\React\\confusion\\src\\components\\MenuComponent.js":"4","X:\\Coding\\React\\confusion\\src\\shared\\dishes.js":"5","X:\\Coding\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","X:\\Coding\\React\\confusion\\src\\components\\MainComponent.js":"7","X:\\Coding\\React\\confusion\\src\\components\\ContactComponent.js":"8","X:\\Coding\\React\\confusion\\src\\components\\FooterComponent.js":"9","X:\\Coding\\React\\confusion\\src\\components\\HeaderComponent.js":"10","X:\\Coding\\React\\confusion\\src\\components\\HomeComponent.js":"11","X:\\Coding\\React\\confusion\\src\\shared\\comments.js":"12","X:\\Coding\\React\\confusion\\src\\shared\\promotions.js":"13","X:\\Coding\\React\\confusion\\src\\shared\\leaders.js":"14","X:\\Coding\\React\\confusion\\src\\components\\AboutComponent.js":"15","X:\\Coding\\React\\confusion\\src\\redux\\configureStore.js":"16","X:\\Coding\\React\\confusion\\src\\redux\\reducer.js":"17"},{"size":638,"mtime":1609802453987,"results":"18","hashOfConfig":"19"},{"size":563,"mtime":1610480837506,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1281,"mtime":1609802643370,"results":"22","hashOfConfig":"19"},{"size":6066,"mtime":1609799278907,"results":"23","hashOfConfig":"19"},{"size":2152,"mtime":1609802323095,"results":"24","hashOfConfig":"19"},{"size":2071,"mtime":1610480838728,"results":"25","hashOfConfig":"19"},{"size":8819,"mtime":1610371694576,"results":"26","hashOfConfig":"19"},{"size":2650,"mtime":1609799088062,"results":"27","hashOfConfig":"19"},{"size":4503,"mtime":1610150122881,"results":"28","hashOfConfig":"19"},{"size":958,"mtime":1610150632527,"results":"29","hashOfConfig":"19"},{"size":4280,"mtime":1609801776103,"results":"30","hashOfConfig":"19"},{"size":445,"mtime":1609799281337,"results":"31","hashOfConfig":"19"},{"size":2382,"mtime":1609801779616,"results":"32","hashOfConfig":"19"},{"size":4450,"mtime":1609807026617,"results":"33","hashOfConfig":"19"},{"size":235,"mtime":1610480883232,"results":"34","hashOfConfig":"19"},{"size":520,"mtime":1610480912001,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yvazjl",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":7,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"X:\\Coding\\React\\confusion\\src\\index.js",[],["76","77"],"X:\\Coding\\React\\confusion\\src\\App.js",[],"X:\\Coding\\React\\confusion\\src\\reportWebVitals.js",[],"X:\\Coding\\React\\confusion\\src\\components\\MenuComponent.js",["78","79"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// functional way\r\nfunction RenderMenuItem( { dish, onClick } ){\r\n  return (\r\n    <Card>\r\n      {/* back ticks used in line below */}\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" object src={dish.image} alt={dish.name}/>\r\n        <CardImgOverlay body className=\"ml-5\">\r\n          <CardTitle heading>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.map((dish) => {\r\n    return (\r\n      <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n        <RenderMenuItem dish={dish} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n          <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>Menu</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n          {menu}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","X:\\Coding\\React\\confusion\\src\\shared\\dishes.js",[],"X:\\Coding\\React\\confusion\\src\\components\\DishdetailComponent.js",["80","81","82","83","84","85","86","87"],"import { Component } from 'react';\r\nimport React from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n    //Constructor no longer needed\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null){\r\n            return (\r\n                <Card>\r\n                    <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        } else {\r\n            return ( <div></div> );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments}) {\r\n        if (comments != null){\r\n            const comments = comments.map(comment => {\r\n                const date = new Date(comment.date);\r\n                return (\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p> -- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                );\r\n            });\r\n            return comments;\r\n        } else {\r\n            return( <div></div> );\r\n        }\r\n    }\r\n\r\n\r\n    const DishDetail = (props) => {\r\n        console.log('Dishdetail Component componentDidUpdate render is invoked.')\r\n        if (props.dish != null)\r\n        return (\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <renderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4>Comments</h4>\r\n                            <renderComments comments={props.dish.comments} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ); else\r\n        return null;\r\n    }\r\n\r\nexport default DishDetail;","X:\\Coding\\React\\confusion\\src\\components\\MainComponent.js",["88"],"X:\\Coding\\React\\confusion\\src\\components\\ContactComponent.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !val || val.length <= len\r\nconst minLength = (len) => (val) => val && val.length >= len\r\nconst isNumber = (val) => !isNaN(Number(val))\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  // use arrow function, no need bind in constructor\r\n  handleSubmit = (values) => {\r\n    console.log('Current State is: ' + JSON.stringify(values))\r\n    alert('Current State is: ' + JSON.stringify(values))\r\n    this.props.resetFeedbackForm()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 numbers',\r\n                      maxLength: 'Must be 15 numbers or less',\r\n                      isNumber: 'Must be a number',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      validEmail: 'Invalid Email Address',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" />{' '}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact","X:\\Coding\\React\\confusion\\src\\components\\FooterComponent.js",["109"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Footer;","X:\\Coding\\React\\confusion\\src\\components\\HeaderComponent.js",["110"],"import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n    };\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n// retrieved values are used here\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav}/>\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About US\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron >\r\n          <div className=\"container\" >\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante Con Fusion</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                    innerRef={(input) => this.username = input} /* retreiving information into input field*/ />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                    innerRef={(input) => this.password = input} /> \r\n              </FormGroup>\r\n              /* Checkbox setup */\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"remember\"\r\n                  innerRef={(input) => this.remember = input} /> \r\n                  Remember me\r\n                </Label>\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Header;","X:\\Coding\\React\\confusion\\src\\components\\HomeComponent.js",[],"X:\\Coding\\React\\confusion\\src\\shared\\comments.js",[],"X:\\Coding\\React\\confusion\\src\\shared\\promotions.js",[],"X:\\Coding\\React\\confusion\\src\\shared\\leaders.js",[],"X:\\Coding\\React\\confusion\\src\\components\\AboutComponent.js",[],"X:\\Coding\\React\\confusion\\src\\redux\\configureStore.js",[],"X:\\Coding\\React\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":2,"column":41,"nodeType":"117","messageId":"118","endLine":2,"endColumn":49},{"ruleId":"115","severity":1,"message":"119","line":2,"column":51,"nodeType":"117","messageId":"118","endLine":2,"endColumn":59},{"ruleId":"115","severity":1,"message":"120","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":19},{"ruleId":"115","severity":1,"message":"121","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":15},{"ruleId":"115","severity":1,"message":"122","line":4,"column":25,"nodeType":"117","messageId":"118","endLine":4,"endColumn":39},{"ruleId":"115","severity":1,"message":"123","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"124","line":9,"column":14,"nodeType":"117","messageId":"118","endLine":9,"endColumn":24},{"ruleId":"115","severity":1,"message":"125","line":25,"column":14,"nodeType":"117","messageId":"118","endLine":25,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":27,"column":30,"nodeType":"117","messageId":"128","endLine":27,"endColumn":38},{"ruleId":"115","severity":1,"message":"129","line":28,"column":23,"nodeType":"117","messageId":"118","endLine":28,"endColumn":27},{"ruleId":"130","severity":1,"message":"131","line":24,"column":3,"nodeType":"132","messageId":"133","endLine":26,"endColumn":4},{"ruleId":"115","severity":1,"message":"134","line":2,"column":52,"nodeType":"117","messageId":"118","endLine":2,"endColumn":61},{"ruleId":"115","severity":1,"message":"135","line":2,"column":70,"nodeType":"117","messageId":"118","endLine":2,"endColumn":75},{"ruleId":"115","severity":1,"message":"136","line":2,"column":82,"nodeType":"117","messageId":"118","endLine":2,"endColumn":94},{"ruleId":"115","severity":1,"message":"137","line":4,"column":27,"nodeType":"117","messageId":"118","endLine":4,"endColumn":34},{"ruleId":"130","severity":1,"message":"131","line":14,"column":3,"nodeType":"132","messageId":"133","endLine":16,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":68,"column":15,"nodeType":"140","endLine":68,"endColumn":57},{"ruleId":"141","severity":2,"message":"142","line":83,"column":16,"nodeType":"143","endLine":83,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":88,"column":19,"nodeType":"140","endLine":99,"endColumn":21},{"ruleId":"141","severity":2,"message":"142","line":112,"column":16,"nodeType":"143","endLine":112,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":117,"column":19,"nodeType":"140","endLine":128,"endColumn":21},{"ruleId":"141","severity":2,"message":"142","line":141,"column":16,"nodeType":"143","endLine":141,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":146,"column":19,"nodeType":"140","endLine":158,"endColumn":21},{"ruleId":"141","severity":2,"message":"142","line":172,"column":16,"nodeType":"143","endLine":172,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":177,"column":19,"nodeType":"140","endLine":187,"endColumn":21},{"ruleId":"141","severity":2,"message":"142","line":199,"column":16,"nodeType":"143","endLine":199,"endColumn":19},{"ruleId":"144","severity":1,"message":"146","line":203,"column":23,"nodeType":"140","endLine":203,"endColumn":100},{"ruleId":"144","severity":1,"message":"147","line":209,"column":19,"nodeType":"140","endLine":209,"endColumn":100},{"ruleId":"141","severity":2,"message":"142","line":215,"column":16,"nodeType":"143","endLine":215,"endColumn":19},{"ruleId":"144","severity":1,"message":"148","line":220,"column":19,"nodeType":"140","endLine":220,"endColumn":119},{"ruleId":"141","severity":2,"message":"142","line":223,"column":16,"nodeType":"143","endLine":223,"endColumn":19},{"ruleId":"115","severity":1,"message":"120","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":103,"column":27,"nodeType":"151","endLine":105,"endColumn":15},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'Component' is defined but never used.","'Media' is defined but never used.","'CardImgOverlay' is defined but never used.","'Link' is defined but never used.","'RenderDish' is defined but never used.","'RenderComments' is defined but never used.","no-use-before-define","'comments' was used before it was defined.","usedBeforeDefined","'date' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FormGroup' is defined but never used.","'Input' is defined but never used.","'FormFeedback' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-undef","'Row' is not defined.","JSXIdentifier","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]